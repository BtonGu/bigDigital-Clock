C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2020 17:37:30 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\Profiles\KEIL_MDK\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*---------------------------------------------------------------------------
   2              电子智能时钟程序
   3              单 片 机：STC89C52RC
   4              晶    振：12MHz
   5              时钟芯片：DS1302
   6              液 晶 屏：LCM-12864-ST7920
   7              时    间：2019年11月26修改完成
   8              LCM12864使用并口连接方式,PSB、RST接高电平    
   9          ------------------------------------------------------------------------------*/
  10          
  11          /*-------------------------------头文件---------------------------------------*/
  12          #include <reg52.h>
  13          #include <intrins.h>
  14          #include "LCD12864.h"
  15          #include "DS1302.h"
  16          #include "nongli.h"
  17          #include "displaytime.h"
  18          #define uint  unsigned int
  19          #define uchar unsigned char
  20          
  21          /*----------------------------定义按键---------------------------------------*/
  22          sbit K1  = P0^0; //K1-设置  
  23          sbit K2  = P0^1; //K2-确认、返回   
  24          sbit K3  = P0^2; //K3-加   
  25          sbit K4  = P0^3; //K4-减   
  26          sbit KL  = P0^6; //K4-减  
  27          //sbit K5  = P3^7; //液晶背光控制按键，按一下亮，再按一下灭    
  28          //sbit BLK = P3^7; //液晶背光控制输出，低电平有效，PNP三极管控制。
  29          
  30          /*---------------------函数声明------------------------------*/
  31          void DelayM(uint);        
  32          void ds_w(void);
  33          void Conver_week(bit c,uchar year,uchar month,uchar day);
  34          /*-----------------------------定义全局变量------------------------------*/
  35          bit q=0, w=0;    //调时标志位
  36          unsigned char yy,mo,dd,xq,hh,mm,ss,month_moon,day_moon,week,tiangan,dizhi,moontemp1,moontemp2;//定义时间映
             -射全局变量（专用寄存器）
  37          signed char address,item,max,mini;
  38          
  39          /*-----------------------------延时函数 1MS/次-------------------------------*/
  40          void DelayM(uint a)         
  41          {
  42   1        uchar i;
  43   1        while( --a != 0) { for(i = 0; i < 125; i++); }             
  44   1      }
  45          /*-----------------------------日期、时间设置函数-----------------------------*/
  46          
  47          void tiaozheng(void){
  48   1        yy = read_clock(0x8d);//调用1302时钟数据中的年数据，从地址0x8d中    
  49   1        mo = read_clock(0x89);//调用1302时钟数据中的月数据，从地址0x89中    
  50   1        dd = read_clock(0x87);//从1302芯片中读取日数据，从地址0x87中    
  51   1        week = read_clock(0x8b);//从1302芯片中读取星期数据，从地址0x8b中    
  52   1        lcm_w_test(0,0x80);
  53   1      
  54   1        lcm_w_word("20");//显示内容字符20
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2020 17:37:30 PAGE 2   

  55   1        write_data(yy/16+0x30);//函数参数1，代表本行写数据，YY/16+0X30得出年十位数字的显示码地址，送显示  
  56   1        write_data(yy%16+0x30);//函数?
  57   1        lcm_w_word("年");
  58   1      
  59   1        write_data(mo/16+0x30);
  60   1        write_data(mo%16+0x30);//与16取余数，得到月份的个位数，加0x30得到该数字的液晶内定显示码送显示
  61   1        lcm_w_word("月");     //调用字符显示函数，显示文字 月   
  62   1      
  63   1        write_data(dd/16+0x30);
  64   1        write_data(dd%16+0x30);//第一个1参数，表示本行写数据，日数据与16取余得个位数，加0x30得到显示码
  65   1        lcm_w_word("日");//显示字符 日 
  66   1      
  67   1        if(read_clock(0x85) != hh){  //如果程序中的小时与1302芯片中的不同，
  68   2          hh = read_clock(0x85);  //刷新程序中的小时数据   
  69   2        }
  70   1        lcm_w_test(0,0x91);//第一个参数0，表示本行写入LCM的是指令，指定显示位置91H（第三行左端）
  71   1        write_data(hh/16+0x30);  //显示十位
  72   1         
  73   1        write_data(hh%16+0x30);  //显示个位
  74   1        lcm_w_word("时");
  75   1      
  76   1        if(read_clock(0x83) != mm){//如果1302芯片中的分钟数据与程序中的分钟变量不相等   
  77   2          mm = read_clock(0x83);//刷新程序中的分钟数据
  78   2        }
  79   1        write_data(mm/16+0x30);//向液晶写数据，显示分钟的十位数
  80   1        write_data(mm%16+0x30);//向液晶写数据，显示分钟的个位数
  81   1        lcm_w_word("分");
  82   1      
  83   1        if(read_clock(0x81) != ss){//如果1302芯片中的分钟数据与程序中的秒钟变量不相等   
  84   2          ss = read_clock(0x81);//刷新程序中的秒钟数据
  85   2        }
  86   1        write_data(ss/16+0x30);//向液晶写数据，显示分钟的十位数
  87   1        write_data(ss%16+0x30);//向液晶写数据，显示分钟的个位数
  88   1        lcm_w_word("秒");  
  89   1      
  90   1      }
  91          
  92          /*********************************************************************************************************
             -*/
  93          //调整时间子函数，设置键、数据范围、上调加一，下调减一功能。
  94          void Set_time(unsigned char sel){ //根据选择调整的相应项目加1并写入DS1302，函数参数是按动设置键的次数
  95   1        
  96   1        write_com(0x30); write_com(0x06);
  97   1      
  98   1        lcm_w_test(0,0x98);//第一参数0表示本行写入指令，指定下面行的 调整 显示起始位置为98H
  99   1        lcm_w_word("★调整");//调用字符显示函数，显示 调整字样
 100   1        
 101   1      /*  if(sel==6)  {lcm_w_word("星期");address=0x8a; max=7;mini=1;   
 102   1           tiaozheng();
 103   1           ds_w();
 104   1           tiaozheng();
 105   1          }
 106   1      */
 107   1      //////////////////////////////////////////////////////////////
 108   1        if(sel==5)  {lcm_w_word("秒钟");address=0x80; max=59;mini=0;    
 109   2          tiaozheng();  //调用日期、时间调整函数
 110   2          ds_w();     //被调数据加一或减一函数
 111   2          tiaozheng();
 112   2                    
 113   2        } //秒7，按动7次显示 调整秒钟   
 114   1          //并指定秒钟数据写入1302芯片的地址是0x82，秒钟数据的最大值是59，最小值是0
 115   1         /////////////////////////////////////////////////////////////////////////
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2020 17:37:30 PAGE 3   

 116   1        if(sel==4)  {lcm_w_word("分钟");address=0x82; max=59;mini=0;
 117   2          tiaozheng();
 118   2          ds_w();
 119   2          tiaozheng();
 120   2        
 121   2        } //分钟6，按动6次显示 调整分钟
 122   1          //并指定分钟数据写入1302芯片的地址是0x82，分钟数据的最大值是59，最小值是0
 123   1      
 124   1      
 125   1        if(sel==3)  {lcm_w_word("小时");address=0x84; max=23;mini=0;
 126   2        /***********************************************************/
 127   2                 if(address > 12){
 128   3                  address = address-12; }
 129   2         /********************************************************/
 130   2            tiaozheng();
 131   2          ds_w();
 132   2          tiaozheng();
 133   2        
 134   2        } //小时5，按动5次显示 调整小时
 135   1          //规定小时数据写入1302芯片的位置是0x84，小时数据最大值23，最小值是0
 136   1        
 137   1      
 138   1        if(sel==2)  {lcm_w_word("日期");
 139   2          address=0x86; 
 140   2      
 141   2          mo = read_clock(0x89);//读月数据
 142   2          moontemp1=mo/16;
 143   2          moontemp2=mo%16;
 144   2          mo=moontemp1*10+moontemp2;//转换成10进制月份数据
 145   2      
 146   2            yy = read_clock(0x8d);//读年数据
 147   2              moontemp1=yy/16;
 148   2          moontemp2=yy%16;
 149   2          yy=moontemp1*10+moontemp2;//转换成10进制年份数据 
 150   2      
 151   2              if(mo==2&&yy%4!=0){max=28;mini=1;}//平年2月28天
 152   2          if(mo==2&&yy%4==0){max=29;mini=1;}//闰年2月29天
 153   2          if(mo==1||mo==3||mo==5||mo==7||mo==8||mo==10||mo==12){max=31;mini=1;}//31天的月份
 154   2          if(mo==4||mo==6||mo==9||mo==11){max=30;mini=1;}//30天的月份
 155   2          tiaozheng();
 156   2          ds_w();
 157   2          tiaozheng(); //调用日期、时间调整函数
 158   2       
 159   2        } //日3，按动3次显示 调整日期
 160   1          //规定日期数据写入1302的位置地址是0x86，日期最大值31，最小值是1
 161   1      
 162   1      
 163   1      
 164   1        if(sel==1)  {lcm_w_word("月份");address=0x88; max=12;mini=1;
 165   2           tiaozheng();
 166   2           ds_w();
 167   2           tiaozheng();
 168   2        
 169   2         }  //月2，按动2次显示 调整月份   
 170   1          //规定月份写入1302的位置地址是0x88，月份最大值12，最小值1
 171   1      
 172   1      
 173   1        if(sel==0)  {lcm_w_word("年份");address=0x8c; max=99; mini=0;
 174   2           tiaozheng();
 175   2           ds_w();    //被调数据加一或减一函数
 176   2           tiaozheng(); //调用日期、时间调整函数
 177   2      
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2020 17:37:30 PAGE 4   

 178   2         }  //年1，按动1次显示 调整年份，
 179   1          //规定年份写入1302的地址是0x8c,年份的最大值99，最小值0
 180   1      
 181   1      }
 182          
 183          /*****************************************************************************/
 184          //被调数据加一或减一，并检查数据范围，写入1302指定地址保存
 185          void ds_w(void){
 186   1      
 187   1        item=((read_clock(address+1))/16)*10 + (read_clock(address+1))%16;
 188   1        if(K3 == 0){ //如果按动上调键
 189   2          item++;  //数加 1  
 190   2        }                            
 191   1        if(K4 == 0){  //如果按动下调键
 192   2            item--;   //数减 1 
 193   2        }
 194   1        if(item>max) item=mini;//查看数值是否在有效范围之内   
 195   1        if(item<mini) item=max;//如果数值小于最小值，则自动等于最大值           
 196   1        write_clock(0x8e,0x00);//允许写1302芯片操作
 197   1        write_clock(address,(item/10)*16+item%10);//转换成16进制写入1302
 198   1        write_clock(0x8e,0x80);//写保护，禁止写操作 
 199   1      }
 200          
 201          /****可参考***********可参考**************可参考***************以上是调试********
 202          
 203          /*主函数---------------------------------------------------------------------*/
 204          void main()
 205          {                      
 206   1        uchar e=0;
 207   1        //Init_1302();    //时钟芯片初始化  
 208   1        lcm_init();     //液晶初始化 
 209   1        DelayM(4000);     //欢迎信息 延时时间  
 210   1        lcm_clr();            //清屏 
 211   1        Clean_12864_GDRAM();   //清屏
 212   1        K1=1;K2=1;K3=1;K4=1;
 213   1        LED=0;
 214   1        while(1)
 215   1        {
 216   2          if (w == 0)      //正常走时
 217   2          { 
 218   3            displaydate();   //显示日期 
 219   3            nongli();    //显示农历 
 220   3            displaytime();   //显示时间 
 221   3            displayxq();   //显示星期 
 222   3          } 
 223   2          else {}            //否则启动调时  
 224   2      
 225   2      /*----------------------------设置时间--------------------------------------*/    
 226   2          if (K1 == 0)         
 227   2          {
 228   3            DelayM(20);                //按键消抖 
 229   3            if(K1 == 0 && w == 1)      //当是调时状态 本键用于调整下一项    
 230   3            {
 231   4              e++;
 232   4              if (e >= 7 ) {e = 0;}
 233   4              while(! K1 );            //等待键松开 
 234   4              Set_time(e);           //调整       
 235   4            }     
 236   3            if(K1 == 0 && w == 0)      //当是正常状态时就进入调时状态   
 237   3            {
 238   4              lcm_clr();            
 239   4              Clean_12864_GDRAM();   //清屏 
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2020 17:37:30 PAGE 5   

 240   4              w=1;                 //进入调时 
 241   4              Set_time(e);
 242   4            }
 243   3              while(K1 == 0);            //等待键松开 
 244   3          }
 245   2      /*--------------------------------------------------------------------------*/    
 246   2          if (K2 == 0)                   // 当在调时状态时就退出调时
 247   2          {
 248   3            DelayM(20);
 249   3            if(K2 == 0 && w == 1)
 250   3            {       
 251   4              w = 0;                 //退出调时
 252   4              e = 0;               //"下一项"计数器清0                
 253   4            }
 254   3            if(K2 == 0 && w == 0) 
 255   3            {       
 256   4              lcm_clr(); Clean_12864_GDRAM();
 257   4              write_com(0x30); write_com(0x06);
 258   4              welcome();        
 259   4              while(K2 == 0);  
 260   4            }
 261   3            lcm_clr(); Clean_12864_GDRAM();
 262   3            displaydate();
 263   3            displayxq(); 
 264   3            displaynl();
 265   3            while(K2 == 0);  
 266   3          }
 267   2      /*加调整--------------------------------------------------------------------*/    
 268   2          if (K3 == 0 && w == 1)
 269   2          { 
 270   3            DelayM(20);
 271   3            if(K3 == 0 && w == 1) { Set_time(e); }
 272   3            while(K3 == 0);
 273   3            while(! K3 );
 274   3          }
 275   2      /*减调整--------------------------------------------------------------------*/    
 276   2          if (K4 == 0 && w == 1) 
 277   2          {         
 278   3            DelayM(20);
 279   3            if(K4 == 0 && w == 1) { Set_time(e); }
 280   3            while(K4 == 0);
 281   3            while(! K4 );
 282   3          }
 283   2      /*液晶背光控制，按一下亮，再按一下灭----------------------------------------*/
 284   2      /*    if(K5 == 0)        
 285   2          {
 286   2            DelayM(20); q = ~q;      //标志位取反
 287   2            if(q){BLK = BLK | 1;}   
 288   2              else {BLK = BLK & 0;}   
 289   2            while(K5 == 0);           
 290   2          }       */
 291   2        }
 292   1      }
 293          /*结束----------------------------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4645    ----
   CONSTANT SIZE    =   1377    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26      37
C51 COMPILER V9.59.0.0   MAIN                                                              03/19/2020 17:37:30 PAGE 6   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4       5
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
